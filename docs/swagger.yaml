definitions:
  model.Task:
    properties:
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      start_time:
        type: string
      user_id:
        type: integer
    type: object
  model.TaskDataToCreate:
    properties:
      name:
        type: string
    type: object
  model.TaskSummary:
    properties:
      duration:
        example: "04:20"
        type: string
      end:
        example: 2024-07-11 17:30
        type: string
      start:
        example: 2024-07-11 13:10
        type: string
      taskName:
        type: string
    type: object
  model.UpdateUserInput:
    properties:
      address:
        type: string
      name:
        type: string
      passportNumber:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.User:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      passportNumber:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.UserIDResponse:
    properties:
      id:
        example: 1
        type: integer
    type: object
info:
  contact: {}
  description: API для отслеживания времени выполнения задач
  title: Time Tracker API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Получение массива данных всех пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: error
          schema:
            type: string
      summary: Получение всех пользователей
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: error
          schema:
            type: string
      summary: Создание нового пользователя
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление пользователя по его id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserIDResponse'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: user not found
          schema:
            type: string
      summary: Удаление пользователя
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Изменить данные пользователя по его id (Можно отправлять не все
        поля, а только требующие замены)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: user not found
          schema:
            type: string
      summary: Изменение данных пользователя
      tags:
      - Users
  /users/{userID}/task:
    post:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Task data to create
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.TaskDataToCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: user not found
          schema:
            type: string
      summary: Начать отсчет времени задачи для пользователя
      tags:
      - Tasks
  /users/{userID}/task/{taskID}/end:
    post:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: user not found
          schema:
            type: string
      summary: Закночить отсчет времени задачи для пользователя
      tags:
      - Tasks
  /users/{userID}/tasks:
    get:
      consumes:
      - application/json
      description: Получение списка задач пользователя за указанный период с указанием
        количества времени, затраченное на их выполенение. Список отсортирован по
        убыванию трудозатрат.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Period start time
        example: '"2024-07-08"'
        in: query
        name: start
        required: true
        type: string
      - description: Period end time example(
        example: '"2024-07-22"'
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TaskSummary'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: user not found
          schema:
            type: string
      summary: Получение задач пользователя за период
      tags:
      - Tasks
swagger: "2.0"
